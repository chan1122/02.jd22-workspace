// JAVA07 클래스와 객체 그리고 속성과 메서드
public class JAVA07 {
    /***********************************************
     * 클래스명과 동일한 이름의 파일에는
     * 단 하나의 public 클래스를 가질 수 있다!
     * 그래서 하나의 java파일안에는 다른 클래스를 만들 수 있다!
     * 단, 다른 추가클래스는 public 접근한정자를 쓸수 없다.
     * 접근한정자(Modifire)를 안쓰면 default라고 부른다.
     * 
     * ________________________________________________
     * 
     * [ 클래스에서 사용하는 접근한정자(Modifier) ]
     * -> public을 쓰거나 안쓰거나 둘 중 하나!
     * 1 . public -> 모든 다른 클래스에서 접근허용
     * 2 . default -> 앞에 아무것도 안쓴 경우!
     * -> 같은 패키지 안에서 접근 가능
     * (패키지는 폴더라고 생각하면 됨!)
     * 
     ***********************************************/

    public static void main(String[] args) {

        /***************************************
         * [ 클래스란? ]
         * 객체를만들기 위한 템플릿 객체이다!
         * -> 반대로 보면 객체는 클래스의 실물이다(인트턴스다!)
         * 
         * [ 클래스의 구성 ]
         * - 속성과 메서드로 구성된다!
         * 1 . 속성 - 클래스내에 선언된 변수다
         * 2 . 메서드 - 클래스내에 생성된 함수다
         * 
         * [ 객체지향 프로그래밍 이란?]
         * OOP (object-Oriented Programming)
         * -> 기능별로 구분하여 클래스를 만들고
         * 그 클래스는 객체를 생성하여 모듈별
         * 기능별로 나눠진 모듈화 프로그래밍 방식
         ***************************************/

    } //// main 메서드 ////

} /////// JAVA07 Class ///////

// 과일 클래스 //
class Fruits {
    // 속성 : 클래스안에 선언된 변수
    // 1. 과일이름
    String name;
    // 2. 과일색
    String color;
    // 3. 과일향기
    String flavor;
    // 4. 과일무개
    String weight;

    // 5 . 과일에 대한 정의
    String definition;

    /****************************************
     * \
     * 
     * [ 클래스 생성자(constructor) ]
     * 1. 클래스명과 동일한 이름의 메서드
     * 2. 클래스가 처음 생성될떄 반드시 실행됨
     * 3. 객체초기화 함수다!
     * 4. 안만들어도 기본 생성자가 만들어진다!
     * 5. 반환값(리턴값)을 가질 수 없다!!!
     * 6. 직접 생성자를 만드는 경우:초기값 셋팅시!
     * 
     * /
     *****************************************/

    // 이 클래스를 생성할 경우 초기값 셋팅이 필요하므로 생성자를 만든다!
    // 일반 메서드가 아니므로 이름이 클래스명과 동일함!
    // 보통 매개변수는 속성명과 동일한 이름으로 쓴경우가 많다!
    // 그래서 속성명과 매개변수를 구분하기 위해 속성명 앞에 ->>>> this를 사용한다!
    public Fruits(String 사과, String 빨강초록, String 사과향, String dd, double aa) {
        this.name = 사과;
        this.color = 빨강초록;
        this.flavor = 사과향;
        this.weight = dd;
        this.definition = aa;

    } ////// Fruits 생성자 //////

    // 메서드 - 클래스 안에 정의된 함수
    public void fruitsFn(){
        System.out.println();
    }

} /////// Fruits 클래스 ///////
